## PRO TIP : Test your changes locally with :
## gitlab-ci-multi-runner exec docker {name_of_the_job}

##
## I N C L U D E S
##

include:
  # Export artefacts to the private environment
  - project: 'dalibo/gitlab-templates'
    file: 'artifacts_private_env.yml'
  # Export artefacts to the public environment  
  - project: 'dalibo/gitlab-templates'
    file: 'artifacts_public_env.yml'


##
## V A R I A B L E S
##

variables:
  BRANCH_TARGET: patroni
  MASTER_TARGET: all
  # $ARTIFACTS is required by artefacts_private_env.yml
  ARTIFACTS: '_build/*'
  # THEMES_BRANCH is usually 'stable' or 'master'
  THEMES_BRANCH: master


before_script:
  # Prepare for Deploy Keys
  # see https://docs.gitlab.com/ee/ci/ssh_keys/README.html#ssh-keys-when-using-the-docker-executor
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

#
# We use the same image for all jobs
#
image:
  name: dalibo/pandocker:20.02 # usually 'stable' or 'latest' (=master)
  entrypoint: [""]  # we need to override the image entrypoint


##
##  B U I L D
##

pandoc:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        TARGET: $MASTER_TARGET
        ACTION: archives
        MESSAGE: "All archived and active workshops will be published."
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      variables:
        TARGET: $BRANCH_TARGET
        ACTION: deploy
        MESSAGE: "Only $BRANCH_TARGET will be published."

  script:
    #
    # The dalibo themes are not mandatory
    # CI should be able to run without it
    #
    - > 
        if [[ $GITLAB_DEPLOY_PRIVATE_KEY ]] ; then 
          ssh-add <(echo "$GITLAB_DEPLOY_PRIVATE_KEY")
          git clone -b $THEMES_BRANCH git@gitlab.dalibo.info:marketing/themes.git
          make --directory=themes install
        fi
    # pandoc
    - echo $MESSAGE
    - make $TARGET
    - echo "Move html and pdf files to root directories"
    - make $ACTION

  artifacts:
    paths:
      - _build/fr/
      - _build/en/
    expire_in: 1 day

##
## D E P L O Y
##

# overiding the job template because we need to force GIT_STRATEGY 
# for this pipeline in order to deploy `_archives`
public_env:
  variables:
    GIT_STRATEGY: fetch
